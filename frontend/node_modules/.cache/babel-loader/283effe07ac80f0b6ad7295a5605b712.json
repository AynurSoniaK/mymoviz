{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aynur\\\\Desktop\\\\lacapsule\\\\project\\\\mymoviz\\\\part5\\\\mymovizback\\\\reactapp\\\\src\\\\components\\\\Movie.js\";\nimport React, { useState } from 'react';\nimport '../App.css';\nimport { Button, Col, Card, CardImg, CardBody, CardTitle, CardText, Badge, ButtonGroup } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart, faStar, faVideo } from '@fortawesome/free-solid-svg-icons';\n\nfunction Movie(props) {\n  const [watchMovie, setWatchMovie] = useState(false);\n  const [countWatchMovie, setCountWatchMovie] = useState(0);\n  const [myRatingMovie, setMyRatingMovie] = useState(0);\n  const [isRatingMovie, setIsRatingMovie] = useState(false);\n  const [rating, setRating] = useState(props.globalRating);\n  const [countRating, setCountRating] = useState(props.globalCountRating);\n\n  var changeLiked = (name, img) => {\n    if (props.movieSee == true) {\n      props.handleClickDeleteMovieParent(name);\n    } else {\n      props.handleClickAddMovieParent(name, img);\n    }\n  };\n\n  var addWatch = () => {\n    setWatchMovie(true);\n    setCountWatchMovie(countWatchMovie + 1);\n  };\n\n  var setMyRating = rating => {\n    if (rating < 0) {\n      rating = 0;\n    }\n\n    if (rating > 10) {\n      rating = 10;\n    }\n\n    setMyRatingMovie(rating);\n    setIsRatingMovie(true);\n  };\n\n  var tabRating = [];\n\n  for (var i = 0; i < 10; i++) {\n    var color = {};\n\n    if (i < myRatingMovie) {\n      color = {\n        color: '#f1c40f'\n      };\n    }\n\n    let count = i + 1;\n    tabRating.push(React.createElement(FontAwesomeIcon, {\n      onClick: () => setMyRating(count),\n      style: color,\n      icon: faStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n  var nbTotalNote = rating * countRating;\n  var nbTotalVote = countRating;\n\n  if (isRatingMovie) {\n    nbTotalVote += 1;\n    nbTotalNote += myRatingMovie;\n  }\n\n  var avgTotal = Math.round(nbTotalNote / nbTotalVote);\n  var tabGlobalRating = [];\n\n  for (var i = 0; i < 10; i++) {\n    var color = {};\n\n    if (i < avgTotal) {\n      color = {\n        color: '#f1c40f'\n      };\n    }\n\n    tabGlobalRating.push(React.createElement(FontAwesomeIcon, {\n      style: color,\n      icon: faStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n  if (props.movieSee) {\n    var colorLike = {\n      color: '#e74c3c',\n      cursor: 'pointer'\n    };\n  } else {\n    var colorLike = {\n      cursor: 'pointer'\n    };\n  }\n\n  if (watchMovie) {\n    var colorWatch = {\n      color: '#e74c3c'\n    };\n  } else {\n    var colorWatch = {};\n  }\n\n  var description = props.movieDesc;\n  console.log(description);\n\n  if (description.length > 80) {\n    description = \"hello\";\n  }\n\n  console.log(props.movieImg);\n  return React.createElement(Col, {\n    xs: \"12\",\n    lg: \"6\",\n    xl: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Card, {\n    style: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: `https://image.tmdb.org/t/p/w500/${props.movieImg}`,\n    alt: props.movieName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Like \", React.createElement(FontAwesomeIcon, {\n    style: colorLike,\n    icon: faHeart,\n    onClick: () => changeLiked(props.movieName, props.movieImg),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Nombre de vues  \", React.createElement(FontAwesomeIcon, {\n    style: colorWatch,\n    icon: faVideo,\n    onClick: () => addWatch(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), \" \", React.createElement(Badge, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, countWatchMovie)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Mon avis\", tabRating, React.createElement(ButtonGroup, {\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => setMyRating(myRatingMovie - 1),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"-\"), React.createElement(Button, {\n    onClick: () => setMyRating(myRatingMovie + 1),\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"+\"))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Moyenne\", tabGlobalRating, \"(\", nbTotalVote, \")\"), React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, props.movieName), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, props.movieDesc))));\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/aynur/Desktop/lacapsule/project/mymoviz/part5/mymovizback/reactapp/src/components/Movie.js"],"names":["React","useState","Button","Col","Card","CardImg","CardBody","CardTitle","CardText","Badge","ButtonGroup","FontAwesomeIcon","faHeart","faStar","faVideo","Movie","props","watchMovie","setWatchMovie","countWatchMovie","setCountWatchMovie","myRatingMovie","setMyRatingMovie","isRatingMovie","setIsRatingMovie","rating","setRating","globalRating","countRating","setCountRating","globalCountRating","changeLiked","name","img","movieSee","handleClickDeleteMovieParent","handleClickAddMovieParent","addWatch","setMyRating","tabRating","i","color","count","push","nbTotalNote","nbTotalVote","avgTotal","Math","round","tabGlobalRating","colorLike","cursor","colorWatch","description","movieDesc","console","log","length","movieImg","marginBottom","movieName"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport { \r\n  Button,\r\n  Col,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Badge,\r\n  ButtonGroup,\r\n } from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faStar, faVideo} from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Movie(props) {\r\n\r\n  const [watchMovie, setWatchMovie] = useState(false)\r\n  const [countWatchMovie, setCountWatchMovie] = useState(0)\r\n  const [myRatingMovie, setMyRatingMovie] = useState(0)\r\n  const [isRatingMovie, setIsRatingMovie] = useState(false)\r\n\r\n  const [rating, setRating] = useState(props.globalRating)\r\n  const [countRating, setCountRating] = useState(props.globalCountRating)\r\n\r\n  var changeLiked = (name, img) => {\r\n    if(props.movieSee == true){\r\n      props.handleClickDeleteMovieParent(name)\r\n    } else {\r\n      props.handleClickAddMovieParent(name, img)\r\n    }\r\n  }\r\n\r\n  var addWatch = () => {\r\n    setWatchMovie(true)\r\n    setCountWatchMovie(countWatchMovie+1)\r\n  }\r\n\r\n  var setMyRating = (rating) => {\r\n    if(rating < 0){\r\n      rating = 0\r\n    }\r\n\r\n    if(rating > 10){\r\n      rating = 10\r\n    }\r\n\r\n    setMyRatingMovie(rating)\r\n    setIsRatingMovie(true)\r\n  }\r\n\r\n  var tabRating = []\r\n  for(var i=0;i<10;i++){\r\n      var color = {}\r\n      if(i<myRatingMovie){\r\n          color = {color: '#f1c40f'}\r\n      }\r\n      let count = i+1\r\n      tabRating.push(<FontAwesomeIcon onClick={() => setMyRating(count)} style={color} icon={faStar} /> )\r\n  }\r\n\r\n  var nbTotalNote = rating * countRating\r\n  var nbTotalVote = countRating\r\n\r\n  if(isRatingMovie){\r\n    nbTotalVote +=1\r\n    nbTotalNote += myRatingMovie\r\n  }\r\n\r\n  var avgTotal = Math.round(nbTotalNote / nbTotalVote)\r\n\r\n  var tabGlobalRating = []\r\n  for(var i=0;i<10;i++){\r\n      var color = {}\r\n      if(i<avgTotal){\r\n          color = {color: '#f1c40f'}\r\n      }\r\n      tabGlobalRating.push(<FontAwesomeIcon style={color} icon={faStar} /> )\r\n  }\r\n\r\n  if(props.movieSee){\r\n    var colorLike = {color: '#e74c3c',cursor:'pointer'}\r\n  } else {\r\n    var colorLike = {cursor:'pointer'}\r\n  }\r\n\r\n  if(watchMovie){\r\n    var colorWatch = {color: '#e74c3c'}\r\n  } else {\r\n    var colorWatch = {}\r\n  }\r\n\r\n  var description = props.movieDesc\r\n  console.log(description)\r\n  if(description.length > 80){\r\n    description = \"hello\";\r\n  } \r\n  console.log(props.movieImg)\r\n\r\n  return (\r\n    <Col xs=\"12\" lg=\"6\" xl=\"4\">\r\n    <Card style={{marginBottom:30}}>\r\n    <CardImg top src={`https://image.tmdb.org/t/p/w500/${props.movieImg}`} alt={props.movieName} />\r\n    <CardBody>\r\n        <p>Like <FontAwesomeIcon style={colorLike} icon={faHeart} onClick={() => changeLiked(props.movieName,props.movieImg)} /></p>\r\n  <p>Nombre de vues  <FontAwesomeIcon style={colorWatch} icon={faVideo} onClick={() => addWatch()} /> <Badge color=\"secondary\">{countWatchMovie}</Badge></p>\r\n        <p>Mon avis \r\n        {tabRating}\r\n\r\n        <ButtonGroup size=\"sm\">\r\n            <Button onClick={() => setMyRating(myRatingMovie-1)} color=\"secondary\">-</Button>\r\n            <Button onClick={() => setMyRating(myRatingMovie+1)} color=\"secondary\">+</Button>\r\n        </ButtonGroup>\r\n        </p>\r\n        <p>Moyenne\r\n        {tabGlobalRating}\r\n        ({nbTotalVote})\r\n        </p>\r\n  <CardTitle>{props.movieName}</CardTitle>\r\n        <CardText>{props.movieDesc}</CardText>\r\n    </CardBody>\r\n    </Card>\r\n    </Col>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}