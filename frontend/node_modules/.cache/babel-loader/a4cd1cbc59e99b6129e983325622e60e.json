{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aynur\\\\Desktop\\\\lacapsule\\\\project\\\\mymoviz\\\\part5\\\\mymovizback\\\\reactapp\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container, Row, Button, Nav, NavItem, NavLink, Popover, PopoverHeader, PopoverBody, ListGroup, ListGroupItem, ListGroupItemText } from 'reactstrap';\nimport Movie from './components/Movie';\n\nfunction App() {\n  const [moviesCount, setMoviesCount] = useState(0);\n  const [moviesWishList, setMoviesWishList] = useState([]);\n  const [moviesList, setMoviesList] = useState([]);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  var handleClickAddMovie = async (name, img) => {\n    setMoviesCount(moviesCount + 1);\n    setMoviesWishList([...moviesWishList, {\n      name: name,\n      img: img\n    }]);\n    var cardMovie = await fetch('/wishlist-movie', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `name=${name}&img=${img}`\n    });\n  };\n\n  var handleClickDeleteMovie = async name => {\n    setMoviesCount(moviesCount - 1);\n    setMoviesWishList(moviesWishList.filter(object => object.name != name));\n    await fetch(`/wishlist-movie/${name}`, {\n      method: 'DELETE'\n    });\n  };\n\n  var cardWish = moviesWishList.map((movie, i) => {\n    return React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ListGroupItemText, {\n      onClick: () => {\n        handleClickDeleteMovie(movie.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      width: \"25%\",\n      src: movie.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \" \", movie.name));\n  });\n  var moviesData = [];\n  useEffect(() => {\n    async function loadData() {\n      var rawResponse = await fetch('/new-movies');\n      var response = await rawResponse.json();\n      console.log(\"reponsefetch:\", response);\n\n      for (var i = 0; i < response.movies.length; i++) {\n        moviesData.push({\n          name: response.movies[i].original_title,\n          desc: response.movies[i].overview,\n          img: response.movies[i].backdrop_path,\n          note: response.movies[i].vote_average,\n          vote: response.movies[i].vote_count,\n          popularity: response.movies[i].popularity\n        });\n      }\n\n      setMoviesList(moviesData);\n    }\n\n    loadData();\n  }, []);\n  console.log(\"la nouvelle liste \", moviesList);\n  var movieList = moviesList.map((movie, i) => {\n    var result = moviesWishList.find(element => element.name == movie.name);\n    var isSee = false;\n\n    if (result != undefined) {\n      isSee = true;\n    }\n\n    var resultdesc = movie.desc;\n\n    if (resultdesc.length > 300) {\n      resultdesc = resultdesc.slice(0, 300) + '...';\n    }\n\n    if (movie.img == null) {\n      movie.img = '../public/generique.jpg';\n    }\n\n    return React.createElement(Movie, {\n      key: i,\n      movieSee: isSee,\n      handleClickDeleteMovieParent: handleClickDeleteMovie,\n      handleClickAddMovieParent: handleClickAddMovie,\n      movieName: movie.name,\n      movieDesc: resultdesc,\n      movieImg: movie.img,\n      globalRating: movie.note,\n      globalCountRating: movie.vote,\n      popularity: movie.popularity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#232528\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"./logo.png\",\n    width: \"30\",\n    height: \"30\",\n    className: \"d-inline-block align-top\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Last Releases\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Button, {\n    id: \"Popover1\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, moviesCount, \" films\"), React.createElement(Popover, {\n    placement: \"bottom\",\n    isOpen: popoverOpen,\n    target: \"Popover1\",\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(PopoverHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"WishList\"), React.createElement(PopoverBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, cardWish)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, movieList)));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/aynur/Desktop/lacapsule/project/mymoviz/part5/mymovizback/reactapp/src/App.js"],"names":["React","useState","useEffect","Container","Row","Button","Nav","NavItem","NavLink","Popover","PopoverHeader","PopoverBody","ListGroup","ListGroupItem","ListGroupItemText","Movie","App","moviesCount","setMoviesCount","moviesWishList","setMoviesWishList","moviesList","setMoviesList","popoverOpen","setPopoverOpen","toggle","handleClickAddMovie","name","img","cardMovie","fetch","method","headers","body","handleClickDeleteMovie","filter","object","cardWish","map","movie","i","moviesData","loadData","rawResponse","response","json","console","log","movies","length","push","original_title","desc","overview","backdrop_path","note","vote_average","vote","vote_count","popularity","movieList","result","find","element","isSee","undefined","resultdesc","slice","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Popover,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemText,\r\n\r\n} from 'reactstrap';\r\n\r\nimport Movie from './components/Movie'\r\n\r\nfunction App() {\r\n\r\n  const [moviesCount, setMoviesCount] = useState(0)\r\n  const [moviesWishList, setMoviesWishList] = useState([])\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n  var handleClickAddMovie = async (name, img) => {\r\n    setMoviesCount(moviesCount + 1)\r\n    setMoviesWishList([...moviesWishList, { name: name, img: img }])\r\n    var cardMovie = await fetch('/wishlist-movie', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: `name=${name}&img=${img}`\r\n    });\r\n  }\r\n\r\n  var handleClickDeleteMovie = async (name) => {\r\n    setMoviesCount(moviesCount - 1)\r\n    setMoviesWishList(moviesWishList.filter(object => object.name != name))\r\n    await fetch(`/wishlist-movie/${name}`, {\r\n      method: 'DELETE'\r\n    });\r\n  }\r\n\r\n  var cardWish = moviesWishList.map((movie, i) => {\r\n    return (\r\n      <ListGroupItem>\r\n        <ListGroupItemText onClick={() => { handleClickDeleteMovie(movie.name) }}>\r\n          <img width=\"25%\" src={movie.img} /> {movie.name}\r\n        </ListGroupItemText>\r\n      </ListGroupItem>\r\n    )\r\n  })\r\n\r\n  var moviesData = [];\r\n\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      var rawResponse = await fetch('/new-movies');\r\n      var response = await rawResponse.json();\r\n      console.log(\"reponsefetch:\", response);\r\n\r\n      for (var i = 0; i < response.movies.length; i++) {\r\n        moviesData.push({\r\n          name: response.movies[i].original_title,\r\n          desc: response.movies[i].overview,\r\n          img: response.movies[i].backdrop_path,\r\n          note: response.movies[i].vote_average,\r\n          vote: response.movies[i].vote_count,\r\n          popularity: response.movies[i].popularity\r\n        })\r\n      }\r\n      setMoviesList(moviesData)\r\n    }\r\n    loadData();\r\n  }, []);\r\n\r\n\r\n  console.log(\"la nouvelle liste \", moviesList);\r\n\r\n  var movieList = moviesList.map((movie, i) => {\r\n    var result = moviesWishList.find(element => element.name == movie.name)\r\n    var isSee = false\r\n    if (result != undefined) {\r\n      isSee = true\r\n    }\r\n    var resultdesc = movie.desc\r\n    if (resultdesc.length > 300) { resultdesc = resultdesc.slice(0, 300) + '...' }\r\n\r\n    if (movie.img == null) {\r\n      movie.img = '../public/generique.jpg';\r\n    }\r\n\r\n    return (<Movie key={i} movieSee={isSee} handleClickDeleteMovieParent={handleClickDeleteMovie} handleClickAddMovieParent={handleClickAddMovie} movieName={movie.name} movieDesc={resultdesc} movieImg={movie.img} globalRating={movie.note} globalCountRating={movie.vote} popularity={movie.popularity} />)\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#232528\" }}>\r\n      <Container>\r\n        <Nav>\r\n          <span className=\"navbar-brand\">\r\n            <img src=\"./logo.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"logo\" />\r\n          </span>\r\n          <NavItem>\r\n            <NavLink style={{ color: 'white' }}>Last Releases</NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink>\r\n              <Button id=\"Popover1\" type=\"button\">{moviesCount} films</Button>\r\n              <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={toggle}>\r\n                <PopoverHeader>WishList</PopoverHeader>\r\n                <PopoverBody>\r\n                  <ListGroup>\r\n                    {cardWish}\r\n                  </ListGroup>\r\n                </PopoverBody>\r\n              </Popover>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <Row>\r\n          {movieList}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}